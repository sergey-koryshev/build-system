name: Create Version Label

on:
  workflow_call:
    secrets:
      REPO_TOKEN:
        description: 'Token to access to repository'
        required: true
    inputs:
      app-name:
        required: true
        type: string
      project-type:
        required: true
        type: string
      version-configuration-path:
        required: true
        type: string
      posh-module-name:
        required: false
        type: string
      posh-custom-module-path:
        required: false
        type: string
      skip-tag:
        required: false
        default: false
        type: boolean
      root-path:
        required: false
        type: string
        default: .
      # https://github.com/orgs/community/discussions/114697
      scripts-ref:
        required: false
        type: string
        default: master
      workspace-name:
        required: false
        type: string
        default: ""

jobs:
  create_label:
    name: Create Version Label
    runs-on: windows-latest
    defaults:
      run:
        working-directory: ${{ inputs.root-path }}
    steps:
      - name: Checkout target repository
        uses: actions/checkout@v3
        with:
          token: ${{ secrets.REPO_TOKEN }}
      - name: Checkout build-system repository
        if: ${{ github.repository != 'sergey-koryshev/build-system' }}
        uses: actions/checkout@v3
        with:
          repository: sergey-koryshev/build-system
          path: build-system-repo
          ref: ${{ inputs.scripts-ref }}
      - name: Set New Version
        shell: pwsh
        run: |
          if ("${{ github.repository }}" -eq "sergey-koryshev/build-system") {
            $env:PSModulePath = $env:PSModulePath + ";$(Join-Path "${{ github.workspace }}" "scripts/ps")"
          } else {
            $env:PSModulePath = $env:PSModulePath + ";$(Join-Path "${{ github.workspace }}" "build-system-repo" "scripts/ps")"
          }

          Import-Module VersionHelper -Force -Verbose
          $splitRepositoryName = "${{ github.repository }}" -split "/"

          if ($splitRepositoryName.Length -ne 2) {
            throw "Repository name cannot be parsed: ${{ github.repository }}"
          }

          $fullPoShCustomModulePath = $null

          if (-not ([string]::IsNullOrWhiteSpace("${{ inputs.posh-custom-module-path }}"))) {
            $fullPoShCustomModulePath = $(Join-Path "${{ github.workspace }}" "${{ inputs.posh-custom-module-path }}")
          }

          $newVersion = Submit-NewVersionLabel -ProjectType ${{ inputs.project-type }} -PowerShellModuleName "${{ inputs.posh-module-name }}" -CustomPowershellModulePath $fullPoShCustomModulePath -SHA "${{ github.sha }}" -Owner $splitRepositoryName[0] -Repository $splitRepositoryName[1] -VersionConfigurationPath (Join-Path "${{ github.workspace }}" "${{ inputs.version-configuration-path }}") -AuthToken ${{ secrets.GITHUB_TOKEN }} -WorkspaceName ${{ inputs.workspace-name }} -Verbose
          "new-version=$newVersion" | Out-File -FilePath $Env:GITHUB_ENV -Encoding utf8 -Append
      - name: Commit New Version
        run: |
          git config --global user.name "$env:GITHUB_ACTOR"
          git config --global user.email "$env:GITHUB_ACTOR@users.noreply.github.com"
          git pull
          git status
          git commit -am "[automated] Bumped ${{ inputs.app-name }} version to ${{ env.new-version }} [skip ci]"
          if ("${{ inputs.skip-tag }}" -eq "false") { git tag ${{ inputs.app-name }}-v${{ env.new-version }} }
          git push
          git push --tags
